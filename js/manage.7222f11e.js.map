{"version":3,"sources":["webpack:///./src/views/home/index.vue","webpack:///./src/enums/roleEnum.ts","webpack:///./src/views/home/components/ModalEdit.vue","webpack:///./src/views/home/components/ModalEdit.vue?a125","webpack:///./src/views/home/components/ModalEdit.vue?a1c3","webpack:///./src/views/home/index.vue?c546","webpack:///./src/views/home/index.vue?2334"],"names":["hasPermission","RoleEnum","系统管理员","type","visible","onSuccess","width","bodyStyle","maskClosable","title","closeModal","handleOk","name","components","emits","props","Boolean","default","setup","emit","attrs","slots","render","ModalEdit","usePermission","state","value","console","log"],"mappings":"4JAGe,e,iBAEA,S,iBACsC,c,6NALnD,eAMS,Q,wBALP,iBAA2D,CAAjD,EAAAA,cAAa,CAAE,EAAAC,SAASC,S,iBAAlC,eAA2D,OAAhB,gB,sBAC3C,eAAkC,Q,wBAAvB,iBAAW,C,2BACtB,eAA8C,UAAhB,cAAW,M,IAA5B,EAAAD,SAASC,UACtB,eAA4B,Q,wBAAjB,iBAAK,C,YAChB,eAAsE,GAA5DC,KAAK,UAAW,QAAK,+BAAE,EAAAC,SAAO,K,yBAAS,iBAAU,C,sBAE7D,eAA4D,GAAzCA,QAAS,EAAAA,Q,kDAAA,EAAAA,QAAO,IAAG,UAAS,EAAAC,W,yCCRrCJ,E,yBAAZ,SAAYA,GACV,mBACA,oBAFF,CAAYA,MAAQ,K,MCUhB,eAAuB,SAApB,oBAAgB,G,EACnB,eAAuB,SAApB,oBAAgB,G,EACnB,eAAuB,SAApB,oBAAgB,G,gFAXrB,eAYU,GAXPG,QAAS,EAAAA,QACVE,MAAM,QACLC,UAAW,yDACXC,cAAc,EACfC,MAAM,QACL,SAAQ,EAAAC,WACR,KAAI,EAAAC,U,yBAEL,iBAAuB,CAAvB,EACA,EACA,M,sCCTW,qBAAgB,CAC7BC,KAAM,GACNC,WAAY,GACZC,MAAO,CAAC,iBAAkB,WAC1BC,MAAO,CACLX,QAAS,CACPD,KAAMa,QACNC,SAAS,IAGbC,MAV6B,SAUvBH,EAVuB,GAUoB,IAAlCI,EAAkC,EAAlCA,KAAkC,EAA5BC,MAA4B,EAArBC,MAC1B,gBAAU,eAEV,IAAMX,EAAa,WACjBS,EAAK,kBAAkB,IAEzB,SAASR,IACPQ,EAAK,UAAW,MAChBT,IAEF,MAAO,CACLA,aACAC,eCtBN,EAAOW,OAAS,EAED,QCCA,iBAAgB,CAC7BV,KAAM,OACNC,WAAY,CAAEU,aACdL,MAH6B,WAGxB,MACuB,OAAAM,EAAA,QAAlBxB,EADL,EACKA,cACR,gBAAU,eACV,IAAMyB,EAAQ,eAAS,CACrBrB,SAAS,IAGLC,EAAY,SAACqB,GACjBC,QAAQC,IAAI,cAAeF,IAG7B,sCACE1B,gBACAC,YACG,eAAOwB,IAHZ,IAIEpB,iBCrBN,EAAOiB,OAASA,EAED","file":"js/manage.7222f11e.js","sourcesContent":["<template>\n  <a-card>\n    <h1 v-if=\"hasPermission([RoleEnum.系统管理员])\">欢迎访问, 系统管理员</h1>\n    <a-divider>指令方式 使用权限控制</a-divider>\n    <h1 v-auth=\"[RoleEnum.系统管理员]\">欢迎访问, 系统管理员</h1>\n    <a-divider>Modal</a-divider>\n    <a-button type=\"primary\" @click=\"visible = true\">open modal</a-button>\n  </a-card>\n  <ModalEdit v-model:visible=\"visible\" @success=\"onSuccess\" />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, reactive, toRefs } from 'vue';\nimport { usePermission } from '@/hooks/web/usePermission';\nimport { RoleEnum } from '@/enums/roleEnum';\nimport ModalEdit from './components/ModalEdit.vue';\n\nexport default defineComponent({\n  name: 'Home',\n  components: { ModalEdit },\n  setup() {\n    const { hasPermission } = usePermission();\n    onMounted(() => {});\n    const state = reactive({\n      visible: false,\n    });\n\n    const onSuccess = (value: string) => {\n      console.log('on success:', value);\n    };\n\n    return {\n      hasPermission,\n      RoleEnum,\n      ...toRefs(state),\n      onSuccess,\n    };\n  },\n});\n</script>\n","export enum RoleEnum {\n  超级管理员 = '超级管理员',\n  系统管理员 = '系统管理员',\n}\n","<template>\n  <a-modal\n    :visible=\"visible\"\n    width=\"600px\"\n    :bodyStyle=\"{ maxHeight: '800px', overflow: 'auto', padding: '24px 120px' }\"\n    :maskClosable=\"false\"\n    title=\"modal\"\n    @cancel=\"closeModal\"\n    @ok=\"handleOk\"\n  >\n    <p>Some contents...</p>\n    <p>Some contents...</p>\n    <p>Some contents...</p>\n  </a-modal>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, SetupContext } from 'vue';\n\nexport default defineComponent({\n  name: '',\n  components: {},\n  emits: ['update:visible', 'success'],\n  props: {\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  setup(props, { emit, attrs, slots }: SetupContext) {\n    onMounted(() => {});\n    // 关闭弹窗\n    const closeModal = () => {\n      emit('update:visible', false);\n    };\n    function handleOk() {\n      emit('success', 'ok');\n      closeModal();\n    }\n    return {\n      closeModal,\n      handleOk,\n    };\n  },\n});\n</script>\n\n<style scoped></style>\n","\nimport { defineComponent, onMounted, SetupContext } from 'vue';\n\nexport default defineComponent({\n  name: '',\n  components: {},\n  emits: ['update:visible', 'success'],\n  props: {\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  setup(props, { emit, attrs, slots }: SetupContext) {\n    onMounted(() => {});\n    // 关闭弹窗\n    const closeModal = () => {\n      emit('update:visible', false);\n    };\n    function handleOk() {\n      emit('success', 'ok');\n      closeModal();\n    }\n    return {\n      closeModal,\n      handleOk,\n    };\n  },\n});\n","import { render } from \"./ModalEdit.vue?vue&type=template&id=40c33860\"\nimport script from \"./ModalEdit.vue?vue&type=script&lang=ts\"\nexport * from \"./ModalEdit.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { defineComponent, onMounted, reactive, toRefs } from 'vue';\nimport { usePermission } from '@/hooks/web/usePermission';\nimport { RoleEnum } from '@/enums/roleEnum';\nimport ModalEdit from './components/ModalEdit.vue';\n\nexport default defineComponent({\n  name: 'Home',\n  components: { ModalEdit },\n  setup() {\n    const { hasPermission } = usePermission();\n    onMounted(() => {});\n    const state = reactive({\n      visible: false,\n    });\n\n    const onSuccess = (value: string) => {\n      console.log('on success:', value);\n    };\n\n    return {\n      hasPermission,\n      RoleEnum,\n      ...toRefs(state),\n      onSuccess,\n    };\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=46eee491\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}