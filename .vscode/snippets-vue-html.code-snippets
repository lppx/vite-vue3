{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Vue Single File Component": {
    "prefix": "v-base scaffold ts",
    "body": [
      "<template>",
      "\t<a-empty description=\"功能建设中...\" />",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import { defineComponent,SetupContext, onMounted,  } from 'vue';",
      "import * as api from '@/api';",
      "",
      "export default defineComponent({",
      "\tname: '',",
      "\tcomponents: {},",
      "\tsetup(props, { emit, attrs, slots }: SetupContext) {",
        "\tonMounted(() => {});",
        "\treturn {}; ",
      "}",
      "});",
      "</script>",
      "",
      "<style scoped></style>",

    ],
    "description": "Base for Vue File"
  },
  "try 网络请求": {
    "prefix": "v-try-catch",
    "body": [
      "try {",
        "\topenLoading();",
      "} catch (error) {",
        "\tModal.error({",
          "\t\ttitle: '失败：$1',",
          "\t\tcontent: error.toString(),",
        "\t});",
      "} finally {",
        "\tcloseLoading();",
      "}"
    ],
    "description": "try 网络请求"
  },
}
